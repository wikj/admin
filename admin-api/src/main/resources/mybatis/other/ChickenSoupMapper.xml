<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aircraft.project.other.mapper.ChickenSoupMapper">

    <resultMap type="ChickenSoup" id="ChickenSoupResult">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="type" column="type"/>
        <result property="from" column="from"/>
    </resultMap>

    <sql id="selectChickenSoupVo">
        select `id`,
               `content`,
               `type`,
               `from`
        from chicken_soup
    </sql>

    <select id="selectChickenSoupList" parameterType="ChickenSoup" resultMap="ChickenSoupResult">
        <include refid="selectChickenSoupVo"/>
        <where>
            <if test="content != null and content != ''">
                AND `content` like concat('%', #{content}, '%')
            </if>
            <if test="id != null and id != ''">
                AND `id` = #{id}
            </if>
            <if test="type != null and type != ''">
                AND `type` = #{type}
            </if>
            <if test="from != null and from != ''">
                AND `from` like concat('%', #{from}, '%')
            </if>
        </where>
    </select>

    <select id="selectChickenSoupById" parameterType="Long" resultMap="ChickenSoupResult">
        <include refid="selectChickenSoupVo"/>
        where `id` = #{id}
    </select>

    <delete id="deleteChickenSoupById" parameterType="Long">
        delete
        from chicken_soup
        where `id` = #{id}
    </delete>

    <delete id="deleteChickenSoupByIds" parameterType="Long">
        delete from chicken_soup where `id` in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateChickenSoup" parameterType="ChickenSoup">
        update chicken_soup
        <set>
            <if test="jobGroup != null and jobGroup != ''">`content` = #{content},</if>
            <if test="invokeTarget != null and invokeTarget != ''">`type` = #{type},</if>
            <if test="cronExpression != null and cronExpression != ''">`from` = #{from},</if>
        </set>
        where `id` = #{id}
    </update>

    <insert id="insertChickenSoup" parameterType="ChickenSoup" useGeneratedKeys="true" keyProperty="id">
        insert into chicken_soup(
        <if test="content != null and content != ''">`content`,</if>
        <if test="type != null and type != ''">`type`,</if>
        <if test="from != null and from != ''">`from`</if>
        )values(
        <if test="content != null and content != ''">#{content},</if>
        <if test="type != null and type != ''">#{type},</if>
        <if test="from != null and from != ''">#{from}</if>
        )
    </insert>

</mapper> 